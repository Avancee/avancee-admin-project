<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.avancee.admin.modules.system.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.github.avancee.admin.modules.system.entity.SysUser">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="NICK_NAME" jdbcType="VARCHAR" property="nickName" />
    <result column="AVATAR" jdbcType="VARCHAR" property="avatar" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="USER_PROFILE" jdbcType="VARCHAR" property="userProfile" />
    <result column="USER_STATE" jdbcType="INTEGER" property="userState" />
    <result column="CREATE_USER" jdbcType="INTEGER" property="createUser" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="MODIFY_USER" jdbcType="INTEGER" property="modifyUser" />
    <result column="MODIFY_DATE" jdbcType="TIMESTAMP" property="modifyDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USER_NAME, PASSWORD, NICK_NAME, AVATAR, EMAIL, USER_PROFILE, USER_STATE, CREATE_USER,
    CREATE_DATE, MODIFY_USER, MODIFY_DATE
  </sql>
  <select id="selectByExample" parameterType="com.github.avancee.admin.modules.system.entity.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from SYS_USER
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SYS_USER
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.avancee.admin.modules.system.entity.SysUserExample">
    delete from SYS_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.avancee.admin.modules.system.entity.SysUser">
    insert into SYS_USER (ID, USER_NAME, PASSWORD, 
      NICK_NAME, AVATAR, EMAIL, 
      USER_PROFILE, USER_STATE, CREATE_USER, 
      CREATE_DATE, MODIFY_USER, MODIFY_DATE
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{userProfile,jdbcType=VARCHAR}, #{userState,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{modifyUser,jdbcType=INTEGER}, #{modifyDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.avancee.admin.modules.system.entity.SysUser">
    insert into SYS_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="nickName != null">
        NICK_NAME,
      </if>
      <if test="avatar != null">
        AVATAR,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="userProfile != null">
        USER_PROFILE,
      </if>
      <if test="userState != null">
        USER_STATE,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="modifyUser != null">
        MODIFY_USER,
      </if>
      <if test="modifyDate != null">
        MODIFY_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userProfile != null">
        #{userProfile,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        #{userState,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        #{modifyUser,jdbcType=INTEGER},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.avancee.admin.modules.system.entity.SysUserExample" resultType="java.lang.Long">
    select count(*) from SYS_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SYS_USER
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        NICK_NAME = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        AVATAR = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userProfile != null">
        USER_PROFILE = #{record.userProfile,jdbcType=VARCHAR},
      </if>
      <if test="record.userState != null">
        USER_STATE = #{record.userState,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyUser != null">
        MODIFY_USER = #{record.modifyUser,jdbcType=INTEGER},
      </if>
      <if test="record.modifyDate != null">
        MODIFY_DATE = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SYS_USER
    set ID = #{record.id,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      NICK_NAME = #{record.nickName,jdbcType=VARCHAR},
      AVATAR = #{record.avatar,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      USER_PROFILE = #{record.userProfile,jdbcType=VARCHAR},
      USER_STATE = #{record.userState,jdbcType=INTEGER},
      CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      MODIFY_USER = #{record.modifyUser,jdbcType=INTEGER},
      MODIFY_DATE = #{record.modifyDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.avancee.admin.modules.system.entity.SysUser">
    update SYS_USER
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        NICK_NAME = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        AVATAR = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userProfile != null">
        USER_PROFILE = #{userProfile,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        USER_STATE = #{userState,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        MODIFY_USER = #{modifyUser,jdbcType=INTEGER},
      </if>
      <if test="modifyDate != null">
        MODIFY_DATE = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.avancee.admin.modules.system.entity.SysUser">
    update SYS_USER
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      NICK_NAME = #{nickName,jdbcType=VARCHAR},
      AVATAR = #{avatar,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      USER_PROFILE = #{userProfile,jdbcType=VARCHAR},
      USER_STATE = #{userState,jdbcType=INTEGER},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      MODIFY_USER = #{modifyUser,jdbcType=INTEGER},
      MODIFY_DATE = #{modifyDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>